{
  "openapi": "3.1.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/companies/company_social_status/me": {
      "get": {
        "summary": "Retrieves social network credential status for the current user's company",
        "tags": [
          "Companies",
          "User Profile"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Social network status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "social_networks": {
                      "type": "object",
                      "properties": {
                        "twitter": {
                          "type": "object",
                          "properties": {
                            "has_credentials": {
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "required": [
                            "has_credentials"
                          ]
                        }
                      },
                      "required": [
                        "twitter"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "social_networks"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not associated with a company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a specific company by ID",
        "tags": [
          "Companies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Company details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "company": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme Corp"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "company"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/employer_metrics": {
      "get": {
        "summary": "Get employer metrics for the current user",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "totalStrategies": {
                      "type": "integer"
                    },
                    "totalPosts": {
                      "type": "integer"
                    },
                    "publishedPosts": {
                      "type": "integer"
                    },
                    "failedPosts": {
                      "type": "integer"
                    },
                    "pendingPosts": {
                      "type": "integer"
                    },
                    "postsPerStrategy": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "totalStrategies",
                    "totalPosts",
                    "publishedPosts",
                    "failedPosts",
                    "pendingPosts",
                    "postsPerStrategy"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/posts": {
      "get": {
        "summary": "List posts for the current user",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts listed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "posts",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "emoji": {
                    "type": "string"
                  },
                  "programming_date_to_post": {
                    "type": "string",
                    "format": "date_time"
                  },
                  "is_published": {
                    "type": "boolean"
                  },
                  "image_url": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "title",
                  "description",
                  "tags",
                  "category",
                  "emoji",
                  "programming_date_to_post"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Show a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Post found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Post updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "emoji": {
                    "type": "string"
                  },
                  "programming_date_to_post": {
                    "type": "string",
                    "format": "date_time"
                  },
                  "is_published": {
                    "type": "boolean"
                  },
                  "image_url": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/v1/strategies": {
      "get": {
        "summary": "Lists strategies for the current user's team",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved strategies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "Marketing Strategy Q1"
                          },
                          "from_schedule": {
                            "type": "string",
                            "format": "date_time",
                            "example": "2024-01-01T00:00:00Z"
                          },
                          "to_schedule": {
                            "type": "string",
                            "format": "date_time",
                            "example": "2024-03-31T23:59:59Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "posts_count": {
                            "type": "integer",
                            "example": 5
                          },
                          "posts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "strategies",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a marketing strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Strategy created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategy": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "strategy"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Missing required parameters"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2025-01-01T09:00:00Z"
                  },
                  "to_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2025-01-31T18:00:00Z"
                  },
                  "description": {
                    "type": "string",
                    "example": "Q1 Social Media Campaign"
                  }
                },
                "required": [
                  "from_schedule",
                  "to_schedule",
                  "description"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/strategies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a specific strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Strategy retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "description": {
                          "type": "string",
                          "example": "Marketing Strategy Q1"
                        },
                        "from_schedule": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-01-01T00:00:00Z"
                        },
                        "to_schedule": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-03-31T23:59:59Z"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "posts_count": {
                          "type": "integer",
                          "example": 5
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "strategy"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Strategy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategies/{strategy_id}/posts": {
      "parameters": [
        {
          "name": "strategy_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "List posts for a specific strategy",
        "tags": [
          "Strategy Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts listed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "posts",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a post for a specific strategy",
        "tags": [
          "Strategy Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "emoji": {
                    "type": "string"
                  },
                  "programming_date_to_post": {
                    "type": "string",
                    "format": "date_time"
                  },
                  "is_published": {
                    "type": "boolean"
                  },
                  "image_url": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "title",
                  "description",
                  "tags",
                  "category",
                  "emoji",
                  "programming_date_to_post"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/create": {
      "post": {
        "summary": "Creates a new marketing strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Strategy created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "strategy"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "to_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-03-31T23:59:59Z"
                  },
                  "description": {
                    "type": "string",
                    "example": "Marketing Strategy Q1"
                  }
                },
                "required": [
                  "from_schedule",
                  "to_schedule",
                  "description"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/templates": {
      "get": {
        "summary": "List templates for the current user",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates listed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "templates": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "templates",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a template",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Template created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "template": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "template"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "emoji": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "category",
                  "emoji"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/templates/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Show a template",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "template": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "template"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update a template",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Template updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "template": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "template"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          },
          "422": {
            "description": "Validation error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "emoji": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a template",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Template not found"
          }
        }
      }
    },
    "/api/v1/templates/categories": {
      "get": {
        "summary": "List template categories",
        "tags": [
          "Templates"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Categories listed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "categories"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "summary": "Creates a new user registration",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "test_user"
                        },
                        "email": {
                          "type": "string",
                          "example": "test_user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "EMPLOYEE"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "role"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "user"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 401
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of the user",
                        "example": "test_user"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user",
                        "example": "test_user@example.com"
                      },
                      "password": {
                        "type": "string",
                        "description": "The password of the user (min 6, max 128 characters)",
                        "example": "Password1234",
                        "minLength": 6,
                        "maxLength": 128
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "EMPLOYEE",
                          "ADMIN",
                          "CUSTOMER"
                        ],
                        "description": "The role of the user (e.g., EMPLOYEE, ADMIN, CUSTOMER)",
                        "example": "EMPLOYEE"
                      },
                      "company_code": {
                        "type": "string",
                        "description": "The code of the company",
                        "example": "COMPANY123"
                      },
                      "team_code": {
                        "type": "string",
                        "description": "The code of the team",
                        "example": "TEAM456"
                      }
                    },
                    "required": [
                      "username",
                      "email",
                      "password",
                      "role",
                      "company_code",
                      "team_code"
                    ]
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "User login (login)",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "user": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "status",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "username",
                      "password"
                    ]
                  }
                },
                "required": [
                  "user"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/sign_out": {
      "delete": {
        "summary": "User logout (sign out)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/me": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "http://localhost:4000"
        }
      }
    }
  ],
  "basePath": "/api/v1",
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "StatusSuccess": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusUnauthorized": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusNotFound": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Resource not found"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 422
          },
          "message": {
            "type": "string",
            "example": "Error"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1,
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "example": 10,
            "description": "Items per page"
          },
          "pages": {
            "type": "integer",
            "example": 5,
            "description": "Total number of pages"
          },
          "count": {
            "type": "integer",
            "example": 42,
            "description": "Total number of items"
          }
        },
        "required": [
          "page",
          "per_page",
          "pages",
          "count"
        ]
      }
    }
  }
}