{
  "openapi": "3.1.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/me/company_social_status": {
      "get": {
        "summary": "Retrieves social network credential status for the current user's company",
        "tags": [
          "Companies",
          "User Profile"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Social network status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "social_networks": {
                      "type": "object",
                      "properties": {
                        "twitter": {
                          "type": "object",
                          "properties": {
                            "has_credentials": {
                              "type": "boolean",
                              "example": true
                            }
                          },
                          "required": [
                            "has_credentials"
                          ]
                        }
                      },
                      "required": [
                        "twitter"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "social_networks"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not associated with a company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a specific company by ID",
        "tags": [
          "Companies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Company details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "company": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme Corp"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "company"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/posts": {
      "get": {
        "summary": "Retrieves all posts",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "format": "date_time",
            "description": "Filter posts from this date",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "format": "date_time",
            "description": "Filter posts until this date",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "title": {
                            "type": "string",
                            "example": "Sample Post"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is a sample post description"
                          },
                          "tags": {
                            "type": "string",
                            "example": "example,post"
                          },
                          "programming_date_to_post": {
                            "type": "string",
                            "format": "date_time",
                            "example": "2024-11-26T00:00:00Z"
                          },
                          "team_member_id": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "posts",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Sample Post"
                        },
                        "description": {
                          "type": "string",
                          "example": "This is a sample post description"
                        },
                        "tags": {
                          "type": "string",
                          "example": "example,post"
                        },
                        "programming_date_to_post": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-11-26T00:00:00Z"
                        },
                        "team_member_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Sample Post"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a sample post description"
                  },
                  "tags": {
                    "type": "string",
                    "example": "example,post"
                  },
                  "programming_date_to_post": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-11-26T00:00:00Z"
                  },
                  "team_member_id": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": [
                  "title",
                  "description",
                  "tags",
                  "programming_date_to_post",
                  "team_member_id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a specific post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Sample Post"
                        },
                        "description": {
                          "type": "string",
                          "example": "This is a sample post description"
                        },
                        "tags": {
                          "type": "string",
                          "example": "example,post"
                        },
                        "programming_date_to_post": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-11-26T00:00:00Z"
                        },
                        "team_member_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Updates a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Updated Post"
                        },
                        "description": {
                          "type": "string",
                          "example": "This is an updated post description"
                        },
                        "tags": {
                          "type": "string",
                          "example": "updated,post"
                        },
                        "programming_date_to_post": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-11-26T00:00:00Z"
                        },
                        "team_member_id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "post"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Post"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is an updated post description"
                  },
                  "tags": {
                    "type": "string",
                    "example": "updated,post"
                  },
                  "programming_date_to_post": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-11-26T00:00:00Z"
                  },
                  "team_member_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a post",
        "tags": [
          "Posts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategies": {
      "post": {
        "summary": "Creates a marketing strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Strategy created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "idProccess": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing parameters: from_schedule, to_schedule"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2025-03-01T10:00:00Z"
                  },
                  "to_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2025-03-10T18:00:00Z"
                  },
                  "description": {
                    "type": "string",
                    "example": "New campaign strategy for social media"
                  }
                },
                "required": [
                  "from_schedule",
                  "to_schedule",
                  "description"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Lists strategies for the current user's team",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved strategies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "Marketing Strategy Q1"
                          },
                          "from_schedule": {
                            "type": "string",
                            "format": "date_time",
                            "example": "2024-01-01T00:00:00Z"
                          },
                          "to_schedule": {
                            "type": "string",
                            "format": "date_time",
                            "example": "2024-03-31T23:59:59Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "posts_count": {
                            "type": "integer",
                            "example": 5
                          },
                          "posts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  },
                  "required": [
                    "status",
                    "strategies",
                    "pagination"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategies/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a specific strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Strategy retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "description": {
                          "type": "string",
                          "example": "Marketing Strategy Q1"
                        },
                        "from_schedule": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-01-01T00:00:00Z"
                        },
                        "to_schedule": {
                          "type": "string",
                          "format": "date_time",
                          "example": "2024-03-31T23:59:59Z"
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        },
                        "posts_count": {
                          "type": "integer",
                          "example": 5
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "strategy"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Strategy not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/strategy/create": {
      "post": {
        "summary": "Creates a new marketing strategy",
        "tags": [
          "Strategies"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Strategy created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "strategy": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "active"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "strategy"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-01-01T00:00:00Z"
                  },
                  "to_schedule": {
                    "type": "string",
                    "format": "date_time",
                    "example": "2024-03-31T23:59:59Z"
                  },
                  "description": {
                    "type": "string",
                    "example": "Marketing Strategy Q1"
                  }
                },
                "required": [
                  "from_schedule",
                  "to_schedule",
                  "description"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/signup": {
      "post": {
        "summary": "Creates a new user registration",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "test_user"
                        },
                        "email": {
                          "type": "string",
                          "example": "test_user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "EMPLOYEE"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "role"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "user"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusError"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 401
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username of the user",
                    "example": "test_user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the user",
                    "example": "test_user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user",
                    "example": "password1234"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "EMPLOYEE",
                      "ADMIN",
                      "CUSTOMER"
                    ],
                    "description": "The role of the user (e.g., EMPLOYEE, ADMIN, CUSTOMER)",
                    "example": "EMPLOYEE"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password",
                  "role"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "summary": "Retrieves the current user details",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "test_user"
                        },
                        "email": {
                          "type": "string",
                          "example": "test_user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "EMPLOYEE"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "role"
                      ]
                    }
                  },
                  "required": [
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "Signs in a user",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "test_user"
                        },
                        "email": {
                          "type": "string",
                          "example": "test_user@example.com"
                        },
                        "role": {
                          "type": "string",
                          "example": "EMPLOYEE"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "role"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test_user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/logout": {
      "delete": {
        "summary": "Signs out a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusSuccess"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusUnauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "http://localhost:3000"
        }
      }
    }
  ],
  "basePath": "/api/v1",
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "StatusSuccess": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusUnauthorized": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusNotFound": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Resource not found"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "StatusError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 422
          },
          "message": {
            "type": "string",
            "example": "Error"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1,
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "example": 10,
            "description": "Items per page"
          },
          "pages": {
            "type": "integer",
            "example": 5,
            "description": "Total number of pages"
          },
          "count": {
            "type": "integer",
            "example": 42,
            "description": "Total number of items"
          }
        },
        "required": [
          "page",
          "per_page",
          "pages",
          "count"
        ]
      }
    }
  }
}